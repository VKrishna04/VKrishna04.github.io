{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "https://vkrishna04.github.io/settings.schema.json",
	"title": "Portfolio Website Configuration Schema",
	"description": "Comprehensive JSON Schema for portfolio website configuration including GitHub integration, project management, social media, resume sections, and UI customization. This schema provides validation, IntelliSense support, and documentation for all configuration options.\n\nCopyright 2025 Krishna GSVV\nLicensed under the Apache License, Version 2.0\nYou may obtain a copy at http://www.apache.org/licenses/LICENSE-2.0\n\nFEATURES:\n- Dynamic GitHub project fetching with fallback to static projects\n- Comprehensive social media integration\n- Resume/CV management with multiple sections\n- Customizable UI themes and animations\n- SEO-optimized project metadata\n- Mobile-responsive configuration options\n- Accessibility features and validation\n\nBEST PRACTICES:\n- Use semantic technology tags (lowercase kebab-case)\n- Include comprehensive project descriptions (50+ characters)\n- Provide multiple project URLs (live, demo, documentation)\n- Maintain consistent color schemes across social platforms\n- Optimize images for web (prefer CDN URLs)\n- Include accessibility labels for all interactive elements\n\nTECHNOLOGY RECOMMENDATIONS:\n- Frontend: React, Vue.js, Angular, Svelte\n- Styling: Tailwind CSS, Styled Components, CSS Modules\n- Backend: Node.js, Python, Java, Go, Rust\n- Databases: PostgreSQL, MongoDB, Redis, Firebase\n- Cloud: AWS, Azure, GCP, Vercel, Netlify\n- DevOps: Docker, Kubernetes, GitHub Actions, CI/CD",
	"version": "2.0.0",
	"type": "object",
	"additionalProperties": true,
	"properties": {
		"$schema": {
			"type": "string",
			"description": "JSON Schema reference for validation",
			"default": "./settings.schema.json"
		},
		"github": {
			"type": "object",
			"description": "GitHub API configuration for dynamic repository fetching. This enables automatic project discovery and keeps your portfolio synchronized with your latest work.\n\nSETUP GUIDE:\n1. Choose 'org' for organization repos or 'user' for personal repos\n2. Set username to your GitHub username or organization name\n3. Construct apiUrl: https://api.github.com/{orgs|users}/{username}/repos\n4. Use descriptive userAgent for API identification\n\nRATE LIMITS:\n- Unauthenticated: 60 requests/hour\n- Authenticated: 5000 requests/hour\n- Consider caching for production use",
			"additionalProperties": false,
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"org",
						"user"
					],
					"description": "GitHub account type:\n- 'org': Organization account (e.g., company, team, project group)\n- 'user': Individual user account (personal repositories)\n\nThis affects the API endpoint structure and available repository types.",
					"examples": [
						"org",
						"user"
					]
				},
				"username": {
					"type": "string",
					"minLength": 1,
					"maxLength": 39,
					"pattern": "^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?$",
					"description": "GitHub username or organization name. Must follow GitHub naming conventions:\n- 1-39 characters long\n- Alphanumeric characters and hyphens only\n- Cannot start or end with hyphen\n- Cannot contain consecutive hyphens",
					"examples": [
						"Life-Experimentalist",
						"VKrishna04",
						"microsoft",
						"facebook",
						"your-org-name"
					]
				},
				"apiUrl": {
					"type": "string",
					"format": "uri",
					"pattern": "^https://api\\.github\\.com/(orgs|users)/[^/]+/repos$",
					"description": "GitHub API endpoint for fetching repositories. Must be a valid GitHub API URL:\n- For organizations: https://api.github.com/orgs/{org-name}/repos\n- For users: https://api.github.com/users/{username}/repos\n\nEnsure the URL matches your account type and username.",
					"examples": [
						"https://api.github.com/orgs/Life-Experimentalist/repos",
						"https://api.github.com/users/VKrishna04/repos",
						"https://api.github.com/orgs/microsoft/repos",
						"https://api.github.com/orgs/Life-Experimentalist/repos"
					]
				},
				"userAgent": {
					"type": "string",
					"minLength": 1,
					"maxLength": 100,
					"pattern": "^[a-zA-Z0-9._-]+$",
					"description": "Custom user agent string for API requests. This helps with:\n- API rate limiting and identification\n- Analytics and usage tracking\n- Debugging and monitoring\n\nUse a descriptive name that identifies your portfolio site.",
					"examples": [
						"VKrishna04-Portfolio",
						"Portfolio-Website",
						"MyName-Resume-Site",
						"Developer-Showcase"
					]
				},
				"accessToken": {
					"type": "string",
					"pattern": "^(ghp_|gho_|ghu_|ghs_|ghr_|github_pat_)[a-zA-Z0-9_]+$",
					"description": "Optional GitHub Personal Access Token for higher rate limits and private repository access. Format: ghp_xxxxxxxxxxxx\n\nSecurity: Store in environment variables, not in committed code!",
					"examples": [
						"ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
					]
				},
				"cacheTimeout": {
					"type": "integer",
					"minimum": 300,
					"maximum": 86400,
					"description": "Cache timeout for API responses in seconds (5 minutes to 24 hours). Helps with rate limiting and performance.",
					"default": 3600
				}
			},
			"required": [
				"type",
				"username",
				"apiUrl",
				"userAgent"
			]
		},
		"home": {
			"type": "object",
			"description": "Home page content and styling configuration",
			"additionalProperties": true,
			"properties": {
				"greeting": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Greeting text displayed before the main name",
					"examples": [
						"Hello, I'm",
						"Hi there! I'm",
						"Welcome! I'm"
					]
				},
				"name": {
					"type": "string",
					"minLength": 1,
					"maxLength": 100,
					"description": "Main name displayed prominently on the home page",
					"examples": [
						"Krishna GSVV",
						"John Doe"
					]
				},
				"nameGradient": {
					"type": "string",
					"description": "CSS gradient or Tailwind CSS gradient classes for the name text styling. Supports both linear-gradient() CSS syntax and Tailwind gradient classes.",
					"examples": [
						"linear-gradient(to right, #c770f0, #ec4999, #ef4444)",
						"from-blue-400 to-purple-600",
						"from-green-400 via-blue-500 to-purple-600"
					]
				},
				"typewriterStrings": {
					"type": "array",
					"minItems": 1,
					"maxItems": 10,
					"uniqueItems": true,
					"items": {
						"type": "string",
						"minLength": 1,
						"maxLength": 100
					},
					"description": "Array of strings for the typewriter animation effect",
					"examples": [
						[
							"Full Stack Developer",
							"AI Enthusiast",
							"Open Source Contributor"
						]
					]
				},
				"description": {
					"type": "string",
					"minLength": 50,
					"maxLength": 300,
					"description": "Brief personal description displayed on the home page",
					"examples": [
						"I'm a passionate full-stack developer with expertise in modern web technologies and AI."
					]
				},
				"location": {
					"type": "object",
					"description": "Location display configuration",
					"additionalProperties": false,
					"properties": {
						"show": {
							"type": "boolean",
							"description": "Whether to display location information on the home page",
							"default": true
						},
						"text": {
							"type": "string",
							"minLength": 1,
							"maxLength": 100,
							"description": "Location display text with optional emoji/icon",
							"examples": [
								"üìç Bengaluru, India",
								"üåç Remote Worldwide",
								"New York, USA"
							]
						},
						"customText": {
							"type": "string",
							"minLength": 1,
							"maxLength": 100,
							"description": "Custom location text (overrides city/country if provided)",
							"examples": [
								"Based in New York",
								"Remote Worldwide"
							]
						},
						"icon": {
							"type": "string",
							"description": "Icon identifier for the location (usually a map or location icon)",
							"examples": [
								"MapPinIcon",
								"GlobeIcon"
							]
						},
						"city": {
							"type": "string",
							"minLength": 1,
							"maxLength": 50,
							"description": "City name",
							"examples": [
								"New York",
								"London",
								"Tokyo"
							]
						},
						"country": {
							"type": "string",
							"minLength": 1,
							"maxLength": 50,
							"description": "Country name",
							"examples": [
								"United States",
								"United Kingdom",
								"Japan"
							]
						}
					},
					"required": [
						"show"
					]
				},
				"profileImage": {
					"type": "object",
					"description": "Profile image configuration for the home page",
					"additionalProperties": true,
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"github",
								"custom"
							],
							"description": "Source type for profile image - 'github' uses GitHub avatar, 'custom' uses customUrl"
						},
						"devUsername": {
							"type": "string",
							"minLength": 1,
							"maxLength": 39,
							"pattern": "^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?$",
							"description": "GitHub username for profile image (used when type is 'github')",
							"examples": [
								"VKrishna04",
								"Life-Experimentalist"
							]
						},
						"customUrl": {
							"$ref": "#/definitions/url",
							"description": "Custom image URL (required when type is 'custom') or empty string",
							"examples": [
								"https://example.com/profile.jpg",
								""
							]
						},
						"altText": {
							"type": "string",
							"minLength": 1,
							"maxLength": 100,
							"description": "Alternative text for accessibility",
							"examples": [
								"Profile picture of Krishna GSVV"
							]
						},
						"borderColor": {
							"type": "string",
							"description": "Tailwind CSS border color class with optional opacity",
							"examples": [
								"border-purple-500",
								"border-blue-400",
								"border-purple-500/30"
							]
						},
						"shadowColor": {
							"type": "string",
							"description": "Tailwind CSS shadow color class with optional opacity",
							"examples": [
								"shadow-purple-500/50",
								"shadow-blue-400/30",
								"shadow-purple-500/20"
							]
						},
						"note": {
							"type": "string",
							"description": "Documentation note for configuration guidance"
						}
					},
					"required": [
						"type",
						"altText"
					],
					"if": {
						"properties": {
							"type": {
								"const": "custom"
							}
						}
					},
					"then": {
						"required": [
							"customUrl"
						]
					}
				},
				"buttons": {
					"type": "array",
					"maxItems": 5,
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"text": {
								"type": "string",
								"minLength": 1,
								"maxLength": 30,
								"description": "Button text displayed to users",
								"examples": [
									"View Resume",
									"Contact Me"
								]
							},
							"link": {
								"type": "string",
								"format": "uri-reference",
								"description": "URL or path the button links to",
								"examples": [
									"/resume",
									"mailto:contact@example.com",
									"#contact"
								]
							},
							"type": {
								"type": "string",
								"enum": [
									"primary",
									"outline"
								],
								"description": "Button style type - 'primary' for filled, 'outline' for bordered"
							},
							"gradient": {
								"type": "string",
								"description": "Tailwind CSS gradient classes for primary buttons",
								"examples": [
									"from-blue-500 to-purple-600",
									"from-purple-600 to-pink-600"
								]
							},
							"hoverGradient": {
								"type": "string",
								"description": "Tailwind CSS gradient classes for hover state",
								"examples": [
									"from-blue-600 to-purple-700",
									"from-purple-700 to-pink-700"
								]
							},
							"shadow": {
								"type": "string",
								"pattern": "^shadow-[a-z-]+$",
								"description": "Tailwind CSS shadow class",
								"examples": [
									"shadow-lg",
									"shadow-xl"
								]
							},
							"borderColor": {
								"type": "string",
								"description": "Tailwind CSS border color class for outline buttons",
								"examples": [
									"border-purple-500",
									"border-blue-400"
								]
							},
							"textColor": {
								"type": "string",
								"description": "Tailwind CSS text color class",
								"examples": [
									"text-purple-500",
									"text-white",
									"text-purple-400"
								]
							},
							"hoverBg": {
								"type": "string",
								"description": "Tailwind CSS background color class for hover state (with hover: prefix)",
								"examples": [
									"hover:bg-purple-500",
									"hover:bg-blue-500/10",
									"bg-purple-500"
								]
							},
							"hoverText": {
								"type": "string",
								"description": "Tailwind CSS text color class for hover state (with hover: prefix)",
								"examples": [
									"hover:text-white",
									"hover:text-purple-500",
									"text-white"
								]
							},
							"shadowColor": {
								"type": "string",
								"description": "Tailwind CSS shadow color class with optional opacity",
								"examples": [
									"shadow-purple-500/25",
									"shadow-cyan-500/25",
									"shadow-blue-500/30"
								]
							},
							"icon": {
								"type": "string",
								"pattern": "^[A-Z][a-zA-Z0-9]*$",
								"description": "React Icon component name from react-icons library. Supports all icon packs: Heroicons, Font Awesome, Simple Icons, DevIcons, etc. Examples: ArrowDownIcon (Heroicons), FaGithub (Font Awesome), SiReact (Simple Icons), DiPython (DevIcons), SiRender, SiFlask, SiOracle",
								"examples": [
									"ArrowDownIcon",
									"DocumentArrowDownIcon",
									"EnvelopeIcon",
									"PhoneIcon",
									"FaGithub",
									"FaLinkedin",
									"FaTwitter",
									"FaInstagram",
									"FaDiscord",
									"FaYoutube",
									"FaReact",
									"FaNodeJs",
									"FaPython",
									"FaJava",
									"FaJs",
									"FaHtml5",
									"FaCss3",
									"FaGitAlt",
									"FaDocker",
									"FaAws",
									"SiReact",
									"SiVuedotjs",
									"SiAngular",
									"SiNextdotjs",
									"SiNodedotjs",
									"SiPython",
									"SiJavascript",
									"SiTypescript",
									"SiDjango",
									"SiFlask",
									"SiMongodb",
									"SiPostgresql",
									"SiMysql",
									"SiRedis",
									"SiDocker",
									"SiKubernetes",
									"SiGooglecloud",
									"SiGit",
									"SiGithub",
									"SiGitlab",
									"SiVscode",
									"SiIntellijidea",
									"SiPycharm",
									"SiJupyter",
									"SiTensorflow",
									"SiPytorch",
									"SiKeras",
									"SiOpencv",
									"SiNumpy",
									"SiPandas",
									"SiStreamlit",
									"SiFastapi",
									"SiExpress",
									"SiTailwindcss",
									"SiBootstrap",
									"SiMaterialui",
									"SiRender",
									"SiOracle",
									"SiLinux",
									"SiWindows",
									"SiUbuntu",
									"SiDebian",
									"SiCentos",
									"SiPlaywright",
									"SiSelenium",
									"SiJest",
									"SiCypress",
									"SiWebpack",
									"SiVite",
									"SiBabel",
									"SiEslint",
									"SiPrettier",
									"SiNpm",
									"SiYarn",
									"SiPip",
									"SiConda",
									"SiPostman",
									"SiInsomnia",
									"SiSlack",
									"SiDiscord",
									"SiZoom",
									"SiNotion",
									"SiTrello",
									"SiJira",
									"SiConfluence",
									"DiPython",
									"DiJava",
									"DiJavascript1",
									"DiReact",
									"DiNodejs",
									"DiMongodb",
									"DiMysql",
									"DiPostgresql",
									"DiRedis",
									"DiDocker",
									"DiGit",
									"DiGithubBadge",
									"DiVisualstudio",
									"DiIntellijidea",
									"DiPycharm",
									"DiLinux",
									"DiUbuntu",
									"DiWindows",
									"DiAws",
									"DiGoogleCloudPlatform",
									"DiHeroku",
									"DiNetlify",
									"DiVercel"
								]
							}
						},
						"required": [
							"text",
							"link",
							"type"
						]
					}
				},
				"showScrollIndicator": {
					"type": "boolean",
					"description": "Whether to show the scroll indicator at the bottom of the page",
					"default": true
				},
				"animations": {
					"type": "object",
					"description": "Animation configuration for home page elements",
					"additionalProperties": false,
					"properties": {
						"typewriterSettings": {
							"type": "object",
							"description": "Configuration for the typewriter effect animation",
							"additionalProperties": false,
							"properties": {
								"speed": {
									"type": "integer",
									"minimum": 1,
									"maximum": 200,
									"description": "Typing speed in milliseconds between characters",
									"default": 50
								},
								"deleteSpeed": {
									"type": "integer",
									"minimum": 1,
									"maximum": 200,
									"description": "Deletion speed in milliseconds between characters",
									"default": 50
								},
								"delay": {
									"type": "integer",
									"minimum": 100,
									"maximum": 5000,
									"description": "Delay between strings in milliseconds",
									"default": 1000
								},
								"autoStart": {
									"type": "boolean",
									"description": "Whether to start the animation automatically",
									"default": true
								},
								"loop": {
									"type": "boolean",
									"description": "Whether to loop the animation continuously",
									"default": true
								}
							}
						},
						"fadeInDuration": {
							"type": "number",
							"minimum": 0.1,
							"maximum": 3.0,
							"description": "Duration of fade-in animations in seconds",
							"default": 0.8
						},
						"staggerDelay": {
							"type": "number",
							"minimum": 0.01,
							"maximum": 1.0,
							"description": "Delay between staggered animations in seconds",
							"default": 0.2
						}
					}
				}
			},
			"required": [
				"greeting",
				"name",
				"typewriterStrings",
				"description",
				"location",
				"profileImage"
			]
		},
		"about": {
			"type": "object",
			"description": "About page content and skills configuration",
			"additionalProperties": true,
			"properties": {
				"heading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 100,
					"description": "Main heading for the about page",
					"examples": [
						"About Me",
						"Get to Know Me"
					]
				},
				"subheading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 150,
					"description": "Subheading or tagline for the about page",
					"examples": [
						"Passionate Developer & Problem Solver"
					]
				},
				"title": {
					"type": "string",
					"minLength": 1,
					"maxLength": 100,
					"description": "Professional title or role",
					"examples": [
						"Full Stack Developer",
						"Software Engineer"
					]
				},
				"paragraphs": {
					"type": "array",
					"minItems": 1,
					"maxItems": 5,
					"items": {
						"type": "string",
						"minLength": 50,
						"maxLength": 500
					},
					"description": "Array of paragraphs describing background, experience, and interests",
					"examples": [
						[
							"I'm a passionate full-stack developer with 5 years of experience..."
						]
					]
				},
				"image": {
					"type": "object",
					"description": "About page image configuration",
					"additionalProperties": true,
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"github",
								"home",
								"custom"
							],
							"description": "Image source type - 'github' for GitHub avatar, 'home' reuses home image, 'custom' for customUrl"
						},
						"customUrl": {
							"$ref": "#/definitions/url",
							"description": "Custom image URL (required when type is 'custom') or empty string",
							"examples": [
								"https://example.com/about-photo.jpg"
							]
						},
						"altText": {
							"type": "string",
							"minLength": 1,
							"maxLength": 100,
							"description": "Alternative text for accessibility",
							"examples": [
								"Professional photo of Krishna GSVV"
							]
						}
					},
					"required": [
						"type",
						"altText"
					],
					"if": {
						"properties": {
							"type": {
								"const": "custom"
							}
						}
					},
					"then": {
						"required": [
							"customUrl"
						]
					}
				},
				"skillsHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the skills section",
					"examples": [
						"Skills & Expertise",
						"Technical Skills"
					]
				},
				"skills": {
					"type": "array",
					"minItems": 1,
					"maxItems": 10,
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"category": {
								"type": "string",
								"minLength": 1,
								"maxLength": 50,
								"description": "Skill category name",
								"examples": [
									"Frontend Development",
									"Backend Development",
									"Mobile Development",
									"DevOps & Tools",
									"Databases",
									"Cloud Platforms"
								]
							},
							"icon": {
								"type": "string",
								"pattern": "^[A-Z][a-zA-Z0-9]*$",
								"description": "React Icons identifier for the skill category icon. Supports Heroicons, Font Awesome, Simple Icons, DevIcons, and other react-icons packages.",
								"examples": [
									"DevicePhoneMobileIcon",
									"ServerIcon",
									"CpuChipIcon",
									"CodeBracketIcon",
									"DatabaseIcon",
									"CloudIcon",
									"BugAntIcon",
									"PaintBrushIcon",
									"ChartBarIcon",
									"CubeIcon",
									"CommandLineIcon",
									"FaCode",
									"FaAws",
									"FaServer",
									"FaMobile",
									"FaDatabase",
									"FaCloud",
									"FaBug",
									"FaChart",
									"FaCog",
									"SiReact",
									"SiVuedotjs",
									"SiAngular",
									"SiNodedotjs",
									"SiPython",
									"SiJavascript",
									"SiTypescript",
									"SiDocker",
									"SiKubernetes",
									"DiPython",
									"DiJava",
									"DiJavascript1",
									"DiReact",
									"DiNodejs",
									"DiMongodb"
								]
							},
							"items": {
								"type": "array",
								"minItems": 1,
								"maxItems": 15,
								"items": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"name": {
											"type": "string",
											"minLength": 1,
											"maxLength": 30,
											"description": "Technology or skill name",
											"examples": [
												"React",
												"Node.js",
												"Python"
											]
										},
										"icon": {
											"type": "string",
											"description": "React Icons identifier for the technology icon",
											"examples": [
												"FaReact",
												"FaNodeJs",
												"FaPython"
											]
										},
										"color": {
											"type": "string",
											"description": "Color for the technology - hex code or Tailwind CSS class",
											"examples": [
												"#61dafb",
												"#339933",
												"#3572a5",
												"text-blue-400",
												"text-green-500"
											]
										}
									},
									"required": [
										"name",
										"icon"
									]
								}
							}
						},
						"required": [
							"category",
							"items"
						]
					}
				},
				"stats": {
					"type": "array",
					"maxItems": 6,
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"number": {
								"type": "string",
								"pattern": "^[0-9]+[+]?$",
								"description": "Statistical number (can include + for 'or more')",
								"examples": [
									"50+",
									"100",
									"5"
								]
							},
							"label": {
								"type": "string",
								"minLength": 1,
								"maxLength": 30,
								"description": "Label describing what the number represents",
								"examples": [
									"Projects Completed",
									"Years Experience",
									"Happy Clients"
								]
							}
						},
						"required": [
							"number",
							"label"
						]
					}
				}
			},
			"required": [
				"heading",
				"title",
				"paragraphs",
				"image",
				"skillsHeading",
				"skills"
			]
		},
		"projects": {
			"type": "object",
			"description": "Project display and data source configuration",
			"additionalProperties": false,
			"properties": {
				"mode": {
					"type": "string",
					"enum": [
						"api",
						"static",
						"hybrid"
					],
					"description": "Data source mode for projects:\n- 'api': Fetch projects dynamically from GitHub API\n- 'static': Use only manually configured staticProjects array\n- 'hybrid': Use API with staticProjects as fallback when API fails\n\nRecommendation: Use 'api' for active developers with public repositories, 'static' for curated project showcases, or 'hybrid' for reliability.",
					"default": "api"
				},
				"ignore": {
					"type": "array",
					"uniqueItems": true,
					"maxItems": 50,
					"items": {
						"type": "string",
						"minLength": 1,
						"maxLength": 100,
						"pattern": "^[a-zA-Z0-9._-]+$"
					},
					"description": "Repository names to exclude from display (case-sensitive). Common excludes:\n- Portfolio websites: 'username.github.io'\n- Config repositories: '.github', 'dotfiles'\n- Private/work projects: 'company-internal', 'client-work'\n- Learning repositories: 'practice', 'tutorials', 'sandbox'\n- Archived projects: 'deprecated-*', 'old-*'",
					"examples": [
						[
							"VKrishna04.github.io",
							".github",
							"private-config",
							"company-internal",
							"learning-sandbox",
							"deprecated-app",
							"test-repository"
						]
					]
				},
				"maxProjects": {
					"type": "integer",
					"minimum": 1,
					"maximum": 100,
					"description": "Maximum number of projects to display on the portfolio. Recommendations:\n- 6-12 projects: Ideal for focused showcase\n- 15-25 projects: Good for active developers\n- 25+ projects: For comprehensive portfolios\n\nConsider user experience and page load times when setting this value.",
					"default": 15
				},
				"sortBy": {
					"type": "string",
					"enum": [
						"updated",
						"created",
						"stars",
						"name",
						"forks"
					],
					"description": "Sort criteria for repositories",
					"default": "updated"
				},
				"sortOrder": {
					"type": "string",
					"enum": [
						"asc",
						"desc"
					],
					"description": "Sort order - 'asc' for ascending, 'desc' for descending",
					"default": "desc"
				},
				"showForks": {
					"type": "boolean",
					"description": "Whether to include forked repositories in the display",
					"default": false
				},
				"showPrivate": {
					"type": "boolean",
					"description": "Whether to include private repositories (requires authentication)",
					"default": false
				},
				"fallbackMode": {
					"type": "boolean",
					"description": "Enable fallback to staticProjects if GitHub API fails or is unavailable",
					"default": true
				},
				"staticProjects": {
					"type": "array",
					"description": "Manually curated project data used when mode is 'static' or as fallback",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"id": {
								"type": "string",
								"pattern": "^[0-9]+$",
								"description": "Unique identifier for the project (GitHub repository ID or custom ID)",
								"examples": [
									"767672764",
									"custom-001"
								]
							},
							"name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Project name (should match repository name for consistency)",
								"examples": [
									"ParkMeter",
									"BreachCheck"
								]
							},
							"description": {
								"type": "string",
								"minLength": 10,
								"maxLength": 500,
								"description": "Detailed project description explaining purpose and functionality",
								"examples": [
									"A parking ticket management system with payment processing"
								]
							},
							"technologies": {
								"type": "array",
								"uniqueItems": true,
								"maxItems": 20,
								"items": {
									"$ref": "#/definitions/technologyTag"
								},
								"description": "Array of technologies, frameworks, tools, and programming languages used in the project. Use lowercase kebab-case for consistency (e.g., 'react', 'node-js', 'typescript')",
								"examples": [
									[
										"django",
										"python",
										"postgresql",
										"redis",
										"docker",
										"javascript",
										"tailwind-css"
									]
								]
							},
							"category": {
								"type": "string",
								"enum": [
									"Web App",
									"Mobile App",
									"Desktop App",
									"CLI Tool",
									"Library",
									"Framework",
									"API",
									"Machine Learning",
									"Data Science",
									"Game",
									"Browser Extension",
									"VS Code Extension",
									"Tool",
									"Educational",
									"Personal",
									"Blockchain",
									"IoT",
									"DevOps",
									"Security",
									"AI/ML",
									"Backend Service",
									"Frontend Component",
									"Full Stack",
									"Microservice",
									"Open Source",
									"Research",
									"Prototype",
									"Production",
									"Other"
								],
								"description": "Project category for filtering, organization, and display grouping. Choose the most appropriate category that best describes the project's primary purpose or domain.",
								"default": "Other"
							},
							"featured": {
								"type": "boolean",
								"description": "Whether this project should be highlighted as featured",
								"default": false
							},
							"status": {
								"type": "string",
								"enum": [
									"Planning",
									"In Development",
									"Beta",
									"Completed",
									"Maintenance",
									"Deprecated",
									"On Hold",
									"Cancelled",
									"Live",
									"Under Review",
									"Testing",
									"Deployed",
									"Archived",
									"Active Development",
									"Stable",
									"Experimental",
									"Ongoing"
								],
								"description": "Current development and deployment status of the project. This helps visitors understand the project's maturity and availability.",
								"default": "Completed"
							},
							"startDate": {
								"$ref": "#/definitions/dateString",
								"description": "Project start date in YYYY-MM-DD format for timeline tracking",
								"examples": [
									"2024-03-05",
									"2025-01-15"
								]
							},
							"endDate": {
								"anyOf": [
									{
										"$ref": "#/definitions/dateString"
									},
									{
										"type": "null"
									}
								],
								"description": "Project completion date in YYYY-MM-DD format. Use null for ongoing projects.",
								"examples": [
									"2024-11-25",
									"2025-06-30",
									null
								]
							},
							"githubUrl": {
								"$ref": "#/definitions/githubUrl",
								"description": "GitHub repository URL for the project",
								"examples": [
									"https://github.com/Life-Experimentalist/ParkMeter"
								]
							},
							"liveUrl": {
								"$ref": "#/definitions/url",
								"description": "Live deployment URL where the project is hosted and accessible to users (production website/app)",
								"examples": [
									"https://vkrishna04.github.io/ParkMeter/",
									"https://myapp.vercel.app",
									"https://api.myservice.com"
								]
							},
							"demoUrl": {
								"$ref": "#/definitions/url",
								"description": "Demo or preview URL for testing the project (separate from live deployment)",
								"examples": [
									"https://demo.example.com",
									"https://staging.myapp.com"
								]
							},
							"documentationUrl": {
								"$ref": "#/definitions/url",
								"description": "Project documentation URL with setup instructions, API docs, or user guides",
								"examples": [
									"https://docs.example.com",
									"https://github.com/user/repo/wiki"
								]
							},
							"imageUrl": {
								"$ref": "#/definitions/url",
								"description": "Project thumbnail, screenshot, or preview image URL for visual representation",
								"examples": [
									"https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=500",
									"https://via.placeholder.com/400x200",
									"https://github.com/user/repo/blob/main/screenshot.png"
								]
							},
							"tags": {
								"type": "array",
								"uniqueItems": true,
								"maxItems": 30,
								"items": {
									"$ref": "#/definitions/technologyTag"
								},
								"description": "SEO and filtering tags for the project. Use descriptive keywords that help categorize and discover the project. Tags should be lowercase kebab-case for consistency.",
								"examples": [
									[
										"web-development",
										"full-stack",
										"responsive-design",
										"api-integration",
										"user-authentication",
										"data-visualization",
										"real-time",
										"mobile-friendly"
									]
								]
							},
							"highlights": {
								"type": "array",
								"maxItems": 5,
								"items": {
									"type": "string",
									"minLength": 10,
									"maxLength": 150
								},
								"description": "Key features, achievements, or notable aspects of the project to showcase to visitors. Focus on unique selling points, technical innovations, or impact metrics.",
								"examples": [
									[
										"Real-time payment processing with 99.9% uptime",
										"Mobile-responsive design supporting all devices",
										"AI-powered recommendations with 85% accuracy",
										"Supports 10,000+ concurrent users",
										"Open source with 500+ GitHub stars"
									]
								]
							},
							"stats": {
								"type": "object",
								"description": "GitHub repository statistics and social proof metrics to showcase project popularity and community engagement",
								"additionalProperties": false,
								"properties": {
									"stars": {
										"type": "integer",
										"minimum": 0,
										"maximum": 999999,
										"description": "Number of GitHub stars indicating project popularity"
									},
									"forks": {
										"type": "integer",
										"minimum": 0,
										"maximum": 999999,
										"description": "Number of repository forks showing community contributions"
									},
									"watchers": {
										"type": "integer",
										"minimum": 0,
										"maximum": 999999,
										"description": "Number of repository watchers tracking project updates"
									},
									"issues": {
										"type": "integer",
										"minimum": 0,
										"maximum": 99999,
										"description": "Number of open GitHub issues for bug tracking and feature requests"
									},
									"downloads": {
										"type": "integer",
										"minimum": 0,
										"description": "Total downloads for packages, releases, or apps (optional)"
									},
									"contributors": {
										"type": "integer",
										"minimum": 0,
										"description": "Number of project contributors (optional)"
									}
								},
								"required": [
									"stars",
									"forks",
									"watchers",
									"issues"
								]
							}
						},
						"required": [
							"id",
							"name",
							"description",
							"category",
							"status",
							"githubUrl",
							"stats"
						]
					}
				},
				"staticProjectsNote": {
					"type": "string",
					"description": "Documentation note explaining how to configure static projects. This field serves as inline help for developers configuring the portfolio.",
					"maxLength": 500,
					"default": "Configure static projects when mode is set to 'static' or as fallback when GitHub API is unavailable. Each project should include comprehensive metadata including technologies, URLs, statistics, and descriptive content for optimal presentation."
				},
				"officialName": {
					"type": "string",
					"minLength": 1,
					"maxLength": 100,
					"description": "Official display name of the portfolio owner"
				},
				"devUsername": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Developer username or handle"
				},
				"profileImage": {
					"type": "string",
					"format": "uri",
					"description": "URL to profile image"
				}
			},
			"required": [
				"mode",
				"ignore",
				"maxProjects",
				"sortBy",
				"sortOrder",
				"showForks",
				"showPrivate",
				"fallbackMode"
			]
		},
		"resume": {
			"type": "object",
			"description": "Resume configuration and content management",
			"additionalProperties": true,
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"file",
						"external"
					],
					"description": "Resume source type - 'file' for local PDF, 'external' for external URL"
				},
				"url": {
					"type": "string",
					"description": "Resume URL - can be relative path (for local files) or full URL (for external)",
					"examples": [
						"https://example.com/resume.pdf",
						"/resume.pdf",
						"./assets/resume.pdf"
					]
				},
				"filename": {
					"type": "string",
					"pattern": "^[a-zA-Z0-9._-]+\\.(pdf|docx)$",
					"description": "Local resume filename (required when type is 'file')",
					"examples": [
						"resume.pdf",
						"john-doe-resume.pdf"
					]
				},
				"alternativeUrl": {
					"$ref": "#/definitions/url",
					"description": "Alternative or backup resume URL or empty string",
					"examples": [
						"https://vkrishna04.github.io/resume.pdf",
						""
					]
				},
				"sectionOrder": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"enum": [
							"experiences",
							"education",
							"skills",
							"awards",
							"certifications",
							"personalProjects",
							"publications",
							"languages",
							"volunteerExperience"
						]
					},
					"description": "Order of sections to display on the resume page",
					"examples": [
						[
							"experiences",
							"education",
							"skills",
							"certifications"
						]
					]
				},
				"experiencesHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the work experience section",
					"examples": [
						"Work Experience",
						"Professional Experience"
					]
				},
				"experiencesIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the experiences section icon",
					"examples": [
						"BriefcaseIcon",
						"BuildingOfficeIcon",
						"UserGroupIcon"
					]
				},
				"educationHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the education section",
					"examples": [
						"Education",
						"Academic Background"
					]
				},
				"educationIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the education section icon",
					"examples": [
						"AcademicCapIcon",
						"BookOpenIcon",
						"BuildingLibraryIcon"
					]
				},
				"skillsHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the skills section",
					"examples": [
						"Technical Skills",
						"Skills & Expertise"
					]
				},
				"skillsIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the skills section icon",
					"examples": [
						"CpuChipIcon",
						"CodeBracketIcon",
						"WrenchScrewdriverIcon"
					]
				},
				"awardsHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the awards section",
					"examples": [
						"Awards & Recognition",
						"Achievements"
					]
				},
				"awardsIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the awards section icon",
					"examples": [
						"TrophyIcon",
						"StarIcon",
						"ShieldCheckIcon"
					]
				},
				"certificationsHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the certifications section",
					"examples": [
						"Certifications",
						"Professional Certifications"
					]
				},
				"certificationsIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the certifications section icon",
					"examples": [
						"ShieldCheckIcon",
						"AcademicCapIcon",
						"DocumentCheckIcon"
					]
				},
				"publicationsHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the publications section",
					"examples": [
						"Publications",
						"Research Publications"
					]
				},
				"publicationsIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the publications section icon",
					"examples": [
						"DocumentTextIcon",
						"BookOpenIcon",
						"NewspaperIcon"
					]
				},
				"languagesHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the languages section",
					"examples": [
						"Languages",
						"Language Proficiency"
					]
				},
				"languagesIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the languages section icon",
					"examples": [
						"GlobeAltIcon",
						"LanguageIcon",
						"ChatBubbleLeftRightIcon"
					]
				},
				"volunteerExperienceHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the volunteer experience section",
					"examples": [
						"Volunteer Experience",
						"Community Service"
					]
				},
				"volunteerExperienceIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the volunteer experience section icon",
					"examples": [
						"HeartIcon",
						"HandRaisedIcon",
						"UserGroupIcon"
					]
				},
				"personalProjectsHeading": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Heading for the personal projects section",
					"examples": [
						"Personal Projects",
						"Notable Projects"
					]
				},
				"personalProjectsIcon": {
					"type": "string",
					"pattern": "^[A-Z][a-zA-Z0-9]*$",
					"description": "React Icons identifier for the personal projects section icon",
					"examples": [
						"CubeIcon",
						"RocketLaunchIcon",
						"CodeBracketIcon"
					]
				},
				"experiences": {
					"type": "array",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"title": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Job title or position",
								"examples": [
									"Senior Software Engineer",
									"Full Stack Developer"
								]
							},
							"company": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Company or organization name",
								"examples": [
									"Google",
									"Microsoft",
									"Startup Inc."
								]
							},
							"period": {
								"type": "string",
								"pattern": "^(\\d{4}|Present) - (\\d{4}|Present)$",
								"description": "Employment period in YYYY - YYYY format",
								"examples": [
									"2020 - 2023",
									"2021 - Present"
								]
							},
							"location": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Work location",
								"examples": [
									"San Francisco, CA",
									"Remote",
									"New York, NY"
								]
							},
							"description": {
								"type": "array",
								"minItems": 1,
								"maxItems": 10,
								"items": {
									"type": "string",
									"minLength": 10,
									"maxLength": 200
								},
								"description": "Array of job responsibilities and achievements"
							}
						},
						"required": [
							"title",
							"company",
							"period",
							"description"
						]
					}
				},
				"education": {
					"type": "array",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"degree": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Degree type and name",
								"examples": [
									"Bachelor of Science",
									"Master of Computer Science"
								]
							},
							"field": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Field of study or major",
								"examples": [
									"Computer Science",
									"Software Engineering"
								]
							},
							"school": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Institution name",
								"examples": [
									"Stanford University",
									"MIT"
								]
							},
							"period": {
								"type": "string",
								"pattern": "^\\d{4} - \\d{4}$",
								"description": "Study period in YYYY - YYYY format",
								"examples": [
									"2016 - 2020"
								]
							},
							"gpa": {
								"type": "string",
								"description": "Grade Point Average in various formats",
								"examples": [
									"3.85/4.0",
									"3.7",
									"95%",
									"First Class",
									"Magna Cum Laude"
								]
							},
							"achievements": {
								"type": "array",
								"maxItems": 5,
								"items": {
									"type": "string",
									"minLength": 5,
									"maxLength": 150
								},
								"description": "Academic achievements and honors"
							}
						},
						"required": [
							"degree",
							"field",
							"school",
							"period"
						]
					}
				},
				"certifications": {
					"type": "array",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 150,
								"description": "Certification name",
								"examples": [
									"AWS Certified Solutions Architect"
								]
							},
							"issuer": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Issuing organization",
								"examples": [
									"Amazon Web Services",
									"Microsoft"
								]
							},
							"date": {
								"type": "string",
								"description": "Certification date in YYYY-MM-DD format or just YYYY for year only",
								"examples": [
									"2023-06-15",
									"2023"
								]
							},
							"credentialId": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Unique credential identifier"
							},
							"certificateUrl": {
								"oneOf": [
									{
										"type": "string",
										"const": "",
										"description": "Empty string for no certificate URL"
									},
									{
										"type": "string",
										"format": "uri",
										"description": "Remote URL to the certificate"
									},
									{
										"type": "string",
										"pattern": "^(assets|public|\\./|\\.\\./).*\\.(pdf|docx|jpg|jpeg|png|gif)$",
										"description": "Local file path relative to public folder (e.g., assets/certificates/cert.pdf)"
									}
								],
								"description": "URL to the certificate - can be remote URL or local file path relative to public folder",
								"examples": [
									"https://example.com/certificate.pdf",
									"assets/certificates/aws-cert.pdf",
									"./documents/certification.pdf",
									""
								]
							},
							"verificationUrl": {
								"type": "string",
								"format": "uri",
								"description": "URL for verification"
							}
						},
						"required": [
							"name",
							"issuer",
							"date",
							"certificateUrl"
						]
					}
				},
				"awards": {
					"type": "array",
					"description": "Awards and recognitions received",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 200,
								"description": "Award or recognition name",
								"examples": [
									"2nd Runner-up at Corporate Hackathon - 2 Lakhs INR Prize",
									"Employee of the Month"
								]
							},
							"organization": {
								"type": "string",
								"minLength": 1,
								"maxLength": 150,
								"description": "Organization or institution that gave the award",
								"examples": [
									"InfinityAI 2025, Tredence Inc.",
									"IIT Delhi Tryst Event & Hive blockchain"
								]
							},
							"date": {
								"type": "string",
								"minLength": 1,
								"maxLength": 50,
								"description": "Date when the award was received (flexible format)",
								"examples": [
									"March 2025",
									"2024",
									"December 15, 2023"
								]
							},
							"location": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Location where the award was received",
								"examples": [
									"Bengaluru, India",
									"New York, USA"
								]
							},
							"description": {
								"type": "string",
								"minLength": 10,
								"maxLength": 500,
								"description": "Detailed description of the award and achievements",
								"examples": [
									"Recognized for developing an innovative web application based on Facial Emotion Detection using MediaPipe and machine learning"
								]
							}
						},
						"required": [
							"name",
							"organization",
							"date",
							"description"
						]
					}
				},
				"publications": {
					"type": "array",
					"description": "Academic publications, research papers, articles, and other written works",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"title": {
								"type": "string",
								"minLength": 1,
								"maxLength": 300,
								"description": "Full title of the publication",
								"examples": [
									"Predicting Severity of Type 2 Diabetic Retinopathy Using Retinal Fundus Images with new DeepLearning Architectures from the Inception and Resnet Families"
								]
							},
							"type": {
								"type": "string",
								"enum": [
									"Conference Paper",
									"Journal Article",
									"Book Chapter",
									"Technical Report",
									"Thesis",
									"Dissertation",
									"White Paper",
									"Blog Post",
									"Preprint",
									"Patent",
									"Other"
								],
								"description": "Type of publication",
								"examples": [
									"Conference Paper",
									"Journal Article"
								]
							},
							"publisher": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Publisher, conference, or journal name",
								"examples": [
									"IEEE",
									"ACM",
									"Springer",
									"Nature"
								]
							},
							"date": {
								"type": "string",
								"pattern": "^\\d{1,2}\\s+\\w+\\s+\\d{4}$|^\\w+\\s+\\d{4}$|^\\d{4}$",
								"description": "Publication date in various formats (DD Month YYYY, Month YYYY, or YYYY)",
								"examples": [
									"12 May 2025",
									"March 2024",
									"2023"
								]
							},
							"url": {
								"$ref": "#/definitions/url",
								"description": "URL to the publication (DOI, IEEE Explore, arXiv, etc.) or empty string",
								"examples": [
									"https://ieeexplore.ieee.org/document/10987517",
									"https://arxiv.org/abs/2301.12345",
									""
								]
							},
							"description": {
								"type": "string",
								"minLength": 50,
								"maxLength": 1500,
								"description": "Abstract or detailed description of the publication",
								"examples": [
									"Due to its high morbidity and medical expenses, DR mellitus (T2DM) is a serious global health concern..."
								]
							},
							"doi": {
								"type": "string",
								"pattern": "^10\\.[0-9]{4,}/.+$",
								"description": "Digital Object Identifier (DOI) if available",
								"examples": [
									"10.1109/ICCV.2023.12345",
									"10.1038/s41586-023-12345-x"
								]
							},
							"authors": {
								"type": "array",
								"minItems": 1,
								"maxItems": 20,
								"items": {
									"type": "string",
									"minLength": 1,
									"maxLength": 100
								},
								"description": "List of authors including yourself",
								"examples": [
									[
										"Krishna GSVV",
										"Jane Smith",
										"John Doe"
									]
								]
							},
							"venue": {
								"type": "string",
								"minLength": 1,
								"maxLength": 200,
								"description": "Conference venue, journal volume/issue, or publication details",
								"examples": [
									"2024 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)",
									"Nature Machine Intelligence, Volume 5, Issue 3"
								]
							},
							"pages": {
								"type": "string",
								"pattern": "^\\d+(-\\d+)?$",
								"description": "Page numbers (single page or range)",
								"examples": [
									"123-130",
									"45"
								]
							},
							"citations": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of citations (if available)"
							}
						},
						"required": [
							"title",
							"type",
							"publisher",
							"date",
							"description"
						]
					}
				},
				"languages": {
					"type": "array",
					"description": "Languages spoken by the individual with proficiency levels",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 50,
								"description": "Language name",
								"examples": [
									"English",
									"Spanish",
									"French",
									"Telugu",
									"Hindi"
								]
							},
							"proficiency": {
								"type": "string",
								"enum": [
									"Native",
									"Fluent",
									"Advanced",
									"Intermediate",
									"Conversational",
									"Basic",
									"Professional",
									"Limited Working"
								],
								"description": "Proficiency level in the language",
								"examples": [
									"Native",
									"Professional",
									"Conversational"
								]
							},
							"level": {
								"type": "string",
								"enum": [
									"A1",
									"A2",
									"B1",
									"B2",
									"C1",
									"C2"
								],
								"description": "CEFR (Common European Framework of Reference) level for language proficiency"
							}
						},
						"required": [
							"name",
							"proficiency"
						]
					}
				},
				"volunteerExperience": {
					"type": "array",
					"description": "Volunteer work and community service experience",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"role": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Volunteer role or position",
								"examples": [
									"Volunteer Developer",
									"Community Mentor",
									"Teaching Assistant"
								]
							},
							"organization": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Organization or institution name",
								"examples": [
									"Local Nonprofit",
									"Open Source Project",
									"Community Center"
								]
							},
							"period": {
								"type": "string",
								"pattern": "^(\\d{4}|Present) - (\\d{4}|Present)$",
								"description": "Volunteer period in YYYY - YYYY format",
								"examples": [
									"2020 - 2023",
									"2021 - Present"
								]
							},
							"location": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Location of volunteer work",
								"examples": [
									"San Francisco, CA",
									"Remote",
									"Local Community"
								]
							},
							"description": {
								"type": "array",
								"minItems": 1,
								"maxItems": 10,
								"items": {
									"type": "string",
									"minLength": 10,
									"maxLength": 200
								},
								"description": "Array of volunteer responsibilities and achievements"
							}
						},
						"required": [
							"role",
							"organization",
							"period",
							"description"
						]
					}
				},
				"personalProjects": {
					"type": "array",
					"description": "Personal projects section for resume",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 100,
								"description": "Project name",
								"examples": [
									"CounterAPI",
									"cSpell Sync"
								]
							},
							"technologies": {
								"type": "array",
								"minItems": 1,
								"maxItems": 10,
								"items": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"name": {
											"type": "string",
											"minLength": 1,
											"maxLength": 50,
											"description": "Technology name",
											"examples": [
												"FastAPI",
												"TypeScript",
												"React"
											]
										},
										"icon": {
											"type": "string",
											"pattern": "^[A-Z][a-zA-Z0-9]*$",
											"description": "React Icons identifier for the technology",
											"examples": [
												"SiFlask",
												"SiTypescript",
												"FaReact"
											]
										},
										"color": {
											"type": "string",
											"description": "Color for the technology - hex code or Tailwind CSS class",
											"examples": [
												"text-green-400",
												"#61dafb",
												"text-blue-500"
											]
										}
									},
									"required": [
										"name",
										"icon",
										"color"
									]
								},
								"description": "Array of technologies used in the project"
							},
							"period": {
								"type": "string",
								"minLength": 1,
								"maxLength": 50,
								"description": "Project development period",
								"examples": [
									"2024 - Present",
									"June 2024",
									"2023"
								]
							},
							"description": {
								"type": "string",
								"minLength": 50,
								"maxLength": 1000,
								"description": "Detailed project description explaining purpose, features, and impact",
								"examples": [
									"Developed FastAPI analytics microservice with PostgreSQL for zero-code visitor tracking"
								]
							},
							"githubUrl": {
								"oneOf": [
									{
										"type": "string",
										"const": "",
										"description": "Empty string for no GitHub URL"
									},
									{
										"type": "string",
										"format": "uri",
										"pattern": "^https://github\\.com/[^/]+/[^/]+/?$",
										"description": "A valid GitHub repository URL"
									}
								],
								"description": "GitHub repository URL for the project",
								"examples": [
									"https://github.com/Life-Experimentalist/CounterAPI",
									""
								]
							},
							"liveUrl": {
								"oneOf": [
									{
										"type": "string",
										"const": "",
										"description": "Empty string for no live URL"
									},
									{
										"type": "string",
										"format": "uri",
										"description": "Remote URL where the project is accessible"
									},
									{
										"type": "string",
										"pattern": "^(assets|public|\\./|\\.\\./).*",
										"description": "Local file path relative to public folder"
									}
								],
								"description": "Live deployment URL where the project is accessible",
								"examples": [
									"https://life-experimentalist.github.io/CounterAPI/",
									"assets/projects/demo.html",
									""
								]
							},
							"demoUrl": {
								"oneOf": [
									{
										"type": "string",
										"const": "",
										"description": "Empty string for no demo URL"
									},
									{
										"type": "string",
										"format": "uri",
										"description": "Remote demo or preview URL"
									},
									{
										"type": "string",
										"pattern": "^(assets|public|\\./|\\.\\./).*",
										"description": "Local demo file path relative to public folder"
									}
								],
								"description": "Demo or preview URL for the project",
								"examples": [
									"https://demo.example.com",
									"assets/demos/project-demo.html",
									""
								]
							},
							"documentationUrl": {
								"oneOf": [
									{
										"type": "string",
										"const": "",
										"description": "Empty string for no documentation URL"
									},
									{
										"type": "string",
										"format": "uri",
										"description": "Remote documentation URL"
									},
									{
										"type": "string",
										"pattern": "^(assets|public|\\./|\\.\\./).*\\.(html|pdf|md)$",
										"description": "Local documentation file path relative to public folder"
									}
								],
								"description": "Project documentation URL",
								"examples": [
									"https://docs.example.com",
									"assets/docs/project-docs.pdf",
									""
								]
							}
						},
						"required": [
							"name",
							"technologies",
							"description"
						]
					}
				}
			},
			"required": [
				"type"
			],
			"if": {
				"properties": {
					"type": {
						"const": "file"
					}
				}
			},
			"then": {
				"required": [
					"filename"
				]
			},
			"else": {
				"required": [
					"url"
				]
			}
		},
		"social": {
			"type": "object",
			"description": "Social media platforms and contact information configuration",
			"additionalProperties": true,
			"properties": {
				"platforms": {
					"type": "array",
					"maxItems": 15,
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 30,
								"description": "Display name of the social platform",
								"examples": [
									"LinkedIn",
									"GitHub",
									"Twitter"
								]
							},
							"key": {
								"type": "string",
								"minLength": 1,
								"maxLength": 20,
								"pattern": "^[a-z0-9-]+$",
								"description": "Unique key identifier for the platform (lowercase, no spaces)",
								"examples": [
									"linkedin",
									"github",
									"twitter"
								]
							},
							"icon": {
								"type": "string",
								"pattern": "^[A-Z][a-zA-Z0-9]*$",
								"description": "React Icons identifier for the platform icon. Supports all icon packs including Font Awesome (Fa*), Simple Icons (Si*), DevIcons (Di*), and Heroicons. Examples: FaGithub, SiLinkedin, DiDiscord, etc.",
								"examples": [
									"FaLinkedin",
									"FaGithub",
									"FaTwitter",
									"FaInstagram",
									"FaDiscord",
									"FaYoutube",
									"FaTwitch",
									"FaTiktok",
									"FaMedium",
									"FaDev",
									"FaStackOverflow",
									"FaBehance",
									"FaDribbble",
									"FaCodepen",
									"FaFacebook",
									"FaWhatsapp",
									"FaTelegram",
									"FaSlack",
									"FaReddit",
									"SiLinkedin",
									"SiGithub",
									"SiTwitter",
									"SiInstagram",
									"SiDiscord",
									"SiYoutube",
									"SiTwitch",
									"SiTiktok",
									"SiMedium",
									"SiDevdotto",
									"SiStackoverflow",
									"SiBehance",
									"SiDribbble",
									"SiCodepen",
									"SiFacebook",
									"SiWhatsapp",
									"SiTelegram",
									"SiSlack",
									"SiReddit",
									"SiX",
									"SiSpotify",
									"SiPinterest",
									"SiGmail",
									"SiOutlook",
									"SiZoom",
									"SiSkype",
									"SiSnapchat",
									"SiWeibo",
									"SiWechat",
									"SiLine",
									"SiViber",
									"SiSignal",
									"SiMastodon",
									"SiTumblr",
									"SiFlickr",
									"SiVimeo",
									"SiTwilio",
									"SiMatrix",
									"SiRocketdotchat",
									"SiMattermost",
									"SiGitter",
									"SiElement",
									"SiKeybase",
									"SiPatreon",
									"SiKofi",
									"SiBuymeacoffee",
									"SiPaypal",
									"SiVenmo",
									"SiCashapp",
									"SiApple",
									"SiAndroid",
									"SiLinux",
									"SiWindows",
									"SiMacos",
									"SiUbuntu",
									"SiDebian",
									"SiCentos",
									"SiFedora",
									"SiArchlinux",
									"SiFreebsd",
									"SiOpenbsd",
									"SiNetbsd"
								]
							},
							"url": {
								"$ref": "#/definitions/url",
								"description": "Full URL to the social media profile or empty string if not used",
								"examples": [
									"https://linkedin.com/in/username",
									"https://github.com/username",
									""
								]
							},
							"label": {
								"type": "string",
								"minLength": 1,
								"maxLength": 50,
								"description": "Accessible label for screen readers",
								"examples": [
									"LinkedIn Profile",
									"GitHub Repository"
								]
							},
							"color": {
								"type": "string",
								"description": "Color for the platform - hex color code or Tailwind CSS class",
								"examples": [
									"#0077b5",
									"#24292e",
									"#1da1f2",
									"text-white",
									"text-blue-500"
								]
							},
							"hoverColor": {
								"type": "string",
								"description": "Color for hover state - hex color code or Tailwind CSS class",
								"examples": [
									"#005885",
									"#1a1a1a",
									"#1991db",
									"hover:text-gray-300",
									"hover:text-blue-400"
								]
							},
							"showInHome": {
								"type": "boolean",
								"description": "Whether to display this platform on the home page",
								"default": true
							},
							"showInFooter": {
								"type": "boolean",
								"description": "Whether to display this platform in the footer",
								"default": true
							},
							"showInContact": {
								"type": "boolean",
								"description": "Whether to display this platform on the contact page",
								"default": true
							},
							"enabled": {
								"type": "boolean",
								"description": "Whether this platform is active and should be displayed",
								"default": true
							}
						},
						"required": [
							"name",
							"key",
							"icon",
							"url",
							"label",
							"color",
							"hoverColor",
							"showInHome",
							"showInFooter",
							"showInContact",
							"enabled"
						]
					}
				},
				"contact": {
					"type": "object",
					"description": "Direct contact information",
					"additionalProperties": false,
					"properties": {
						"email": {
							"type": "string",
							"format": "email",
							"description": "Primary contact email address",
							"examples": [
								"contact@example.com"
							]
						},
						"phone": {
							"oneOf": [
								{
									"type": "string",
									"const": "",
									"description": "Empty string for no phone number"
								},
								{
									"type": "string",
									"pattern": "^\\+?[1-9]\\d{1,14}$",
									"description": "Phone number in international format"
								}
							],
							"description": "Phone number in international format or empty string",
							"examples": [
								"+1234567890",
								"1234567890",
								""
							]
						},
						"location": {
							"type": "string",
							"minLength": 1,
							"maxLength": 100,
							"description": "Current location or preferred meeting location",
							"examples": [
								"New York, NY",
								"Remote",
								"San Francisco Bay Area"
							]
						}
					}
				}
			},
			"required": [
				"platforms"
			]
		},
		"navbar": {
			"type": "object",
			"description": "Navigation bar configuration and styling",
			"additionalProperties": false,
			"properties": {
				"logo": {
					"type": "object",
					"description": "Logo configuration for the navigation bar with dynamic options",
					"additionalProperties": false,
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"text",
								"image",
								"github",
								"auto"
							],
							"description": "Logo type:\n- 'text': Text-based logo with gradient styling\n- 'image': Custom image from customImageUrl\n- 'github': GitHub profile image with fallback to text\n- 'auto': Automatically match home page profileImage settings"
						},
						"text": {
							"type": "string",
							"minLength": 1,
							"maxLength": 20,
							"description": "Text to display as logo (used for text type or as fallback)",
							"examples": [
								"VK",
								"KG",
								"Krishna"
							]
						},
						"name": {
							"type": "string",
							"minLength": 1,
							"maxLength": 50,
							"description": "Full name to display alongside logo",
							"examples": [
								"Krishna GSVV",
								"John Doe"
							]
						},
						"showName": {
							"type": "boolean",
							"description": "Whether to show the name on desktop",
							"default": true
						},
						"showNameOnMobile": {
							"type": "boolean",
							"description": "Whether to show the name on mobile devices",
							"default": false
						},
						"gradient": {
							"type": "string",
							"description": "Tailwind CSS gradient classes for text logo styling",
							"examples": [
								"from-primary-500 to-accent-500",
								"from-blue-400 to-purple-600",
								"from-purple-500 to-pink-500"
							]
						},
						"customImageUrl": {
							"$ref": "#/definitions/url",
							"description": "Custom image URL (for image type) or GitHub profile image URL (for github type)",
							"examples": [
								"https://example.com/logo.png",
								"https://github.com/VKrishna04.png",
								""
							]
						},
						"githubUsername": {
							"type": "string",
							"minLength": 1,
							"maxLength": 39,
							"pattern": "^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?$",
							"description": "GitHub username for fetching profile image (overrides projects.devUsername for navbar only)",
							"examples": [
								"VKrishna04",
								"Life-Experimentalist"
							]
						},
						"imageSize": {
							"type": "string",
							"pattern": "^w-[0-9]+ h-[0-9]+$",
							"description": "Tailwind CSS size classes for image logo",
							"examples": [
								"w-8 h-8",
								"w-10 h-10",
								"w-6 h-6"
							],
							"default": "w-8 h-8"
						},
						"borderRadius": {
							"type": "string",
							"pattern": "^rounded(-[a-z]+)?$",
							"description": "Tailwind CSS border radius class for image logo",
							"examples": [
								"rounded-full",
								"rounded-lg",
								"rounded",
								"rounded-none"
							],
							"default": "rounded-full"
						},
						"note": {
							"type": "string",
							"description": "Documentation note for configuration guidance"
						}
					},
					"required": [
						"type"
					]
				},
				"navigation": {
					"type": "array",
					"minItems": 1,
					"maxItems": 8,
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 20,
								"description": "Display name for the navigation item",
								"examples": [
									"Home",
									"About",
									"Projects"
								]
							},
							"path": {
								"type": "string",
								"description": "URL path for the navigation item",
								"examples": [
									"/",
									"/about",
									"/projects",
									"#contact"
								]
							}
						},
						"required": [
							"name",
							"path"
						]
					}
				},
				"styling": {
					"type": "object",
					"description": "Visual styling options for the navbar",
					"additionalProperties": false,
					"properties": {
						"scrolledBg": {
							"type": "string",
							"description": "Tailwind CSS background classes for navbar when scrolled",
							"examples": [
								"bg-black/80 backdrop-blur-md border-b border-white/10",
								"bg-white/90 backdrop-blur-md"
							]
						},
						"transparentBg": {
							"type": "string",
							"description": "Tailwind CSS background classes for transparent navbar",
							"examples": [
								"bg-transparent",
								"bg-gray-900/0"
							]
						},
						"activeColor": {
							"type": "string",
							"description": "Tailwind CSS text color class for active navigation items",
							"examples": [
								"text-primary-400",
								"text-blue-500"
							]
						},
						"inactiveColor": {
							"type": "string",
							"description": "Tailwind CSS text color classes for inactive navigation items",
							"examples": [
								"text-white hover:text-primary-400",
								"text-gray-300 hover:text-blue-400"
							]
						},
						"activeTabGradient": {
							"type": "string",
							"description": "Tailwind CSS gradient classes for active tab styling",
							"examples": [
								"from-primary-500 to-accent-500",
								"from-blue-400 to-purple-600"
							]
						},
						"mobileMenuBg": {
							"type": "string",
							"description": "Tailwind CSS background class for mobile menu",
							"examples": [
								"bg-gray-900/95",
								"bg-black/90",
								"bg-black/90 backdrop-blur-md"
							]
						}
					}
				},
				"animations": {
					"type": "object",
					"description": "Animation settings for navbar interactions",
					"additionalProperties": false,
					"properties": {
						"initialY": {
							"type": "number",
							"minimum": -200,
							"maximum": 200,
							"description": "Initial Y position for navbar animation in pixels",
							"default": -100
						},
						"springStiffness": {
							"type": "number",
							"minimum": 100,
							"maximum": 1000,
							"description": "Spring stiffness for animations (100 to 1000)",
							"default": 380
						},
						"springDamping": {
							"type": "number",
							"minimum": 10,
							"maximum": 100,
							"description": "Spring damping for animations (10 to 100)",
							"default": 30
						}
					}
				},
				"note": {
					"type": "string",
					"description": "Documentation note for navbar configuration guidance"
				}
			},
			"required": [
				"logo",
				"navigation"
			]
		},
		"footer": {
			"type": "object",
			"description": "Footer configuration and content",
			"additionalProperties": false,
			"properties": {
				"copyright": {
					"type": "object",
					"description": "Copyright information configuration",
					"additionalProperties": false,
					"properties": {
						"name": {
							"type": "string",
							"minLength": 1,
							"maxLength": 100,
							"description": "Name to display in copyright notice",
							"examples": [
								"Krishna GSVV"
							]
						},
						"showYear": {
							"type": "boolean",
							"description": "Whether to show the current year",
							"default": true
						},
						"text": {
							"type": "string",
							"minLength": 1,
							"maxLength": 50,
							"description": "Copyright text template",
							"examples": [
								"¬© {year} {name}. All rights reserved."
							]
						},
						"customText": {
							"type": "string",
							"minLength": 0,
							"maxLength": 100,
							"description": "Custom copyright text (overrides template if provided)",
							"examples": [
								"¬© 2025 Krishna GSVV. Built with ‚ù§Ô∏è"
							]
						}
					},
					"required": [
						"name"
					]
				},
				"madeWith": {
					"type": "object",
					"description": "Made with technology attribution",
					"additionalProperties": false,
					"properties": {
						"show": {
							"type": "boolean",
							"description": "Whether to show the 'made with' section",
							"default": true
						},
						"text": {
							"type": "string",
							"minLength": 1,
							"maxLength": 50,
							"description": "Text before the technology name",
							"examples": [
								"Made with",
								"Built with",
								"Powered by"
							]
						},
						"icon": {
							"type": "string",
							"description": "Icon to display (usually a heart or tech icon)",
							"examples": [
								"‚ù§Ô∏è",
								"‚ö°",
								"üöÄ",
								"FaHeart"
							]
						},
						"iconColor": {
							"type": "string",
							"description": "Tailwind CSS text color class for the icon",
							"examples": [
								"text-red-500",
								"text-blue-500"
							]
						},
						"color": {
							"type": "string",
							"pattern": "^#[0-9A-Fa-f]{6}$",
							"description": "Hex color for the icon",
							"examples": [
								"#ff0000",
								"#3b82f6"
							]
						},
						"by": {
							"type": "string",
							"minLength": 1,
							"maxLength": 30,
							"description": "Technology or framework name",
							"examples": [
								"React",
								"Vite",
								"Next.js",
								"VKrishna04"
							]
						}
					}
				},
				"socialLinks": {
					"type": "object",
					"description": "Social media links in footer",
					"additionalProperties": false,
					"properties": {
						"show": {
							"type": "boolean",
							"description": "Whether to show social links in footer",
							"default": true
						}
					}
				},
				"styling": {
					"type": "object",
					"description": "Footer visual styling options",
					"additionalProperties": false,
					"properties": {
						"backgroundColor": {
							"type": "string",
							"description": "Tailwind CSS background classes for the footer",
							"examples": [
								"bg-gray-900/50 backdrop-blur-sm",
								"bg-black/80"
							]
						},
						"borderColor": {
							"type": "string",
							"description": "Tailwind CSS border color class for footer border",
							"examples": [
								"border-gray-800/50",
								"border-white/10"
							]
						},
						"textColor": {
							"type": "string",
							"description": "Tailwind CSS text color class for footer text",
							"examples": [
								"text-gray-400",
								"text-white"
							]
						},
						"copyrightColor": {
							"type": "string",
							"pattern": "^text-[a-z-]+(-[0-9]+)?$",
							"description": "Tailwind CSS text color class for copyright",
							"examples": [
								"text-gray-400",
								"text-slate-500"
							]
						}
					}
				},
				"note": {
					"type": "string",
					"description": "Documentation note for footer configuration guidance"
				}
			},
			"required": [
				"copyright"
			]
		},
		"favicon": {
			"type": "object",
			"description": "Website favicon configuration with dynamic options",
			"additionalProperties": false,
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"github",
						"custom",
						"default"
					],
					"description": "Favicon source type:\n- 'github': Uses GitHub profile avatar as favicon\n- 'custom': Uses custom image from customUrl\n- 'default': Uses browser default favicon"
				},
				"customUrl": {
					"type": "string",
					"format": "uri",
					"description": "Custom favicon URL (required when type is 'custom')",
					"examples": [
						"https://example.com/favicon.ico",
						"https://github.com/VKrishna04.png"
					]
				},
				"githubUsername": {
					"type": "string",
					"minLength": 1,
					"maxLength": 39,
					"pattern": "^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?$",
					"description": "GitHub username for fetching profile image (overrides projects.devUsername for favicon only)",
					"examples": [
						"VKrishna04",
						"Life-Experimentalist"
					]
				},
				"sizes": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"pattern": "^[0-9]+x[0-9]+$"
					},
					"description": "Array of favicon sizes to generate for different platforms and devices",
					"examples": [
						[
							"16x16",
							"32x32",
							"96x96",
							"192x192",
							"512x512"
						]
					]
				},
				"appleTouchIcon": {
					"type": "boolean",
					"description": "Whether to generate Apple touch icons for iOS devices",
					"default": true
				},
				"note": {
					"type": "string",
					"description": "Documentation note for favicon configuration guidance"
				}
			},
			"required": [
				"type"
			],
			"if": {
				"properties": {
					"type": {
						"const": "custom"
					}
				}
			},
			"then": {
				"required": [
					"customUrl"
				]
			}
		},
		"counterAPI": {
			"type": "object",
			"description": "Project visitor counter API configuration",
			"additionalProperties": false,
			"properties": {
				"enabled": {
					"type": "boolean",
					"description": "Whether to enable project view counters",
					"default": false
				},
				"baseUrl": {
					"type": "string",
					"format": "uri",
					"description": "Base URL for the counter API service",
					"examples": [
						"https://api.counterapi.dev/v1"
					]
				},
				"timeout": {
					"type": "integer",
					"minimum": 1000,
					"maximum": 30000,
					"description": "API request timeout in milliseconds",
					"default": 5000
				},
				"fallbackOnError": {
					"type": "boolean",
					"description": "Whether to show fallback counters if API fails",
					"default": true
				},
				"projectMapping": {
					"type": "object",
					"description": "Configuration for mapping projects to counter endpoints",
					"additionalProperties": false,
					"properties": {
						"note": {
							"type": "string",
							"description": "Documentation note for project mapping configuration"
						},
						"autoGenerate": {
							"type": "boolean",
							"description": "Whether to automatically generate project mappings from repository names",
							"default": true
						},
						"customMappings": {
							"type": "object",
							"patternProperties": {
								"^[a-zA-Z0-9._-]+$": {
									"type": "string",
									"minLength": 1,
									"maxLength": 50
								}
							},
							"description": "Custom mappings from repository names to CounterAPI project names",
							"examples": [
								{
									"ParkMeter": "parking-system",
									"BreachCheck": "security-tool"
								}
							]
						}
					}
				}
			}
		}
	},
	"required": [
		"$schema",
		"github",
		"home",
		"about",
		"projects",
		"resume",
		"social",
		"navbar",
		"footer",
		"favicon",
		"counterAPI"
	],
	"definitions": {
		"url": {
			"oneOf": [
				{
					"type": "string",
					"const": "",
					"description": "Empty string for no URL"
				},
				{
					"type": "string",
					"format": "uri",
					"minLength": 1,
					"description": "A valid URL string"
				}
			],
			"description": "A valid URL string or empty string"
		},
		"color": {
			"type": "string",
			"pattern": "^#[0-9A-Fa-f]{6}$",
			"description": "A valid hex color code (e.g., #ff0000)"
		},
		"tailwindColor": {
			"type": "string",
			"pattern": "^(text|bg|border)-[a-z-]+(-[0-9]+)?$",
			"description": "A valid Tailwind CSS color class"
		},
		"iconName": {
			"type": "string",
			"pattern": "^[A-Z][a-zA-Z0-9]*$",
			"description": "A valid React Icons component name"
		},
		"githubUrl": {
			"oneOf": [
				{
					"type": "string",
					"const": "",
					"description": "Empty string for no GitHub URL"
				},
				{
					"type": "string",
					"format": "uri",
					"pattern": "^https://github\\.com/[^/]+/[^/]+/?$",
					"description": "A valid GitHub repository URL"
				}
			],
			"description": "A valid GitHub repository URL or empty string"
		},
		"dateString": {
			"type": "string",
			"format": "date",
			"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
			"description": "A date in YYYY-MM-DD format"
		},
		"technologyTag": {
			"type": "string",
			"minLength": 1,
			"maxLength": 50,
			"pattern": "^[a-zA-Z0-9._-]+$",
			"description": "A technology tag using lowercase kebab-case format. Comprehensive list of supported technologies based on modern development stack including programming languages, frameworks, databases, cloud platforms, development tools, and emerging technologies.",
			"examples": [
				"python",
				"java",
				"javascript",
				"typescript",
				"c",
				"cplusplus",
				"html5",
				"css3",
				"react",
				"vue",
				"angular",
				"svelte",
				"nextjs",
				"nuxtjs",
				"node-js",
				"express",
				"django",
				"flask",
				"fastapi",
				"spring",
				"laravel",
				"ruby-on-rails",
				"dotnet",
				"aspnet",
				"php",
				"golang",
				"rust",
				"kotlin",
				"swift",
				"dart",
				"flutter",
				"react-native",
				"ionic",
				"xamarin",
				"unity",
				"unreal-engine",
				"mongodb",
				"postgresql",
				"mysql",
				"sqlite",
				"redis",
				"cassandra",
				"elasticsearch",
				"firebase",
				"supabase",
				"prisma",
				"typeorm",
				"sequelize",
				"aws",
				"azure",
				"gcp",
				"heroku",
				"vercel",
				"netlify",
				"docker",
				"kubernetes",
				"jenkins",
				"github-actions",
				"gitlab-ci",
				"terraform",
				"ansible",
				"chef",
				"puppet",
				"vagrant",
				"nginx",
				"apache",
				"linux",
				"ubuntu",
				"debian",
				"centos",
				"windows",
				"macos",
				"bash",
				"powershell",
				"zsh",
				"git",
				"github",
				"gitlab",
				"bitbucket",
				"mercurial",
				"svn",
				"vscode",
				"vim",
				"emacs",
				"intellij",
				"pycharm",
				"eclipse",
				"xcode",
				"android-studio",
				"visual-studio",
				"sublime-text",
				"atom",
				"brackets",
				"jupyter",
				"colab",
				"kaggle",
				"databricks",
				"tensorflow",
				"pytorch",
				"keras",
				"scikit-learn",
				"pandas",
				"numpy",
				"matplotlib",
				"seaborn",
				"plotly",
				"opencv",
				"pillow",
				"streamlit",
				"dash",
				"gradio",
				"huggingface",
				"langchain",
				"openai",
				"anthropic",
				"claude",
				"chatgpt",
				"gemini",
				"llama",
				"mistral",
				"webpack",
				"vite",
				"rollup",
				"parcel",
				"esbuild",
				"babel",
				"typescript-compiler",
				"eslint",
				"prettier",
				"jest",
				"cypress",
				"selenium",
				"playwright",
				"puppeteer",
				"storybook",
				"chromatic",
				"tailwind-css",
				"bootstrap",
				"material-ui",
				"ant-design",
				"chakra-ui",
				"styled-components",
				"emotion",
				"sass",
				"less",
				"postcss",
				"figma",
				"sketch",
				"adobe-xd",
				"photoshop",
				"illustrator",
				"after-effects",
				"premiere-pro",
				"blender",
				"autodesk",
				"solidworks",
				"autocad",
				"api",
				"rest",
				"graphql",
				"websockets",
				"grpc",
				"soap",
				"oauth",
				"jwt",
				"microservices",
				"monolith",
				"serverless",
				"lambda",
				"azure-functions",
				"cloud-functions",
				"edge-computing",
				"cdn",
				"cloudflare",
				"fastly",
				"machine-learning",
				"deep-learning",
				"artificial-intelligence",
				"computer-vision",
				"natural-language-processing",
				"reinforcement-learning",
				"generative-ai",
				"large-language-models",
				"blockchain",
				"ethereum",
				"bitcoin",
				"smart-contracts",
				"solidity",
				"web3",
				"defi",
				"nft",
				"cryptocurrency",
				"iot",
				"arduino",
				"raspberry-pi",
				"embedded-systems",
				"sensors",
				"mqtt",
				"zigbee",
				"bluetooth",
				"wifi",
				"5g",
				"edge-ai",
				"tinyml",
				"cyber-security",
				"penetration-testing",
				"ethical-hacking",
				"cryptography",
				"ssl-tls",
				"vpn",
				"firewall",
				"intrusion-detection",
				"vulnerability-assessment",
				"compliance",
				"gdpr",
				"hipaa",
				"soc2",
				"iso27001",
				"agile",
				"scrum",
				"kanban",
				"devops",
				"ci-cd",
				"tdd",
				"bdd",
				"pair-programming",
				"code-review",
				"technical-writing",
				"documentation",
				"api-documentation",
				"swagger",
				"openapi",
				"postman",
				"insomnia",
				"thunder-client",
				"curl",
				"httpie",
				"monitoring",
				"logging",
				"metrics",
				"alerting",
				"grafana",
				"prometheus",
				"elk-stack",
				"splunk",
				"datadog",
				"new-relic",
				"sentry",
				"bugsnag",
				"rollbar",
				"performance-testing",
				"load-testing",
				"stress-testing",
				"jmeter",
				"k6",
				"artillery",
				"locust",
				"accessibility",
				"wcag",
				"screen-readers",
				"aria",
				"internationalization",
				"localization",
				"i18n",
				"l10n",
				"seo",
				"google-analytics",
				"google-search-console",
				"google-tag-manager",
				"facebook-pixel",
				"hotjar",
				"mixpanel",
				"amplitude",
				"segment",
				"progressive-web-apps",
				"service-workers",
				"web-workers",
				"webassembly",
				"wasm",
				"pwa",
				"amp",
				"jamstack",
				"headless-cms",
				"strapi",
				"contentful",
				"sanity",
				"ghost",
				"wordpress",
				"drupal",
				"joomla",
				"magento",
				"shopify",
				"woocommerce",
				"prestashop",
				"e-commerce",
				"payment-gateway",
				"stripe",
				"paypal",
				"square",
				"razorpay",
				"payu",
				"fintech",
				"banking",
				"insurance",
				"healthcare",
				"edtech",
				"saas",
				"b2b",
				"b2c",
				"crm",
				"erp",
				"hrms",
				"cms",
				"lms",
				"social-media",
				"chat-application",
				"video-streaming",
				"live-streaming",
				"webrtc",
				"zoom-sdk",
				"twilio",
				"sendgrid",
				"mailchimp",
				"mailgun",
				"ses",
				"sns",
				"sqs",
				"rabbitmq",
				"kafka",
				"redis-pub-sub",
				"message-queue",
				"event-driven",
				"event-sourcing",
				"cqrs",
				"domain-driven-design",
				"clean-architecture",
				"hexagonal-architecture",
				"onion-architecture",
				"mvp",
				"mvc",
				"mvvm",
				"flux",
				"redux",
				"mobx",
				"zustand",
				"recoil",
				"context-api",
				"state-management",
				"design-patterns",
				"solid-principles",
				"dry-principle",
				"kiss-principle",
				"yagni-principle",
				"code-quality",
				"code-coverage",
				"static-analysis",
				"sonarqube",
				"codeclimate",
				"codacy",
				"dependabot",
				"renovate",
				"package-management",
				"npm",
				"yarn",
				"pnpm",
				"pip",
				"conda",
				"poetry",
				"pipenv",
				"maven",
				"gradle",
				"composer",
				"bundler",
				"gem",
				"cargo",
				"go-modules",
				"nuget"
			]
		}
	},
	"$comment": "Portfolio Website Configuration Schema v2.0.0 - This comprehensive schema validates all configuration options for a modern portfolio website including GitHub integration, project management, social media links, resume sections, and UI customization. It provides detailed validation rules, helpful examples, and inline documentation to ensure proper configuration and optimal user experience."
}
